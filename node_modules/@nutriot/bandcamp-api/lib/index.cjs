'use strict';

function a(n){return n.start_time&&(n.start_time=new Date(n.start_time).toISOString().slice(0,10)),n.end_time&&(n.end_time=new Date(n.end_time).toISOString().slice(0,10)),n}function d(n){return {error:!0,message:n.error_description||n.error_message||n.message}}function o(n){return Object.entries(n).map(([e,t])=>`${encodeURIComponent(e)}=${encodeURIComponent(t)}`).join("&")}var p=class{CLIENT_ID;CLIENT_SECRET;BANDCAMP_BASE_URL="https://bandcamp.com";constructor(e){if(!e?.id||!e?.secret)throw new Error("You need to provide both, your Bandcamp client ID and secret");this.CLIENT_ID=String(e.id),this.CLIENT_SECRET=e.secret;}async post(e,t={}){let r=await fetch(e,{headers:{Accept:"application/json","Content-Type":"application/json"},...t,method:"POST"});return r.ok?await r.json():d(await r.json())}async getClientCredentials(){let e=`${this.BANDCAMP_BASE_URL}/oauth_token`,t={grant_type:"client_credentials",client_id:this.CLIENT_ID,client_secret:this.CLIENT_SECRET},r={headers:{"Content-Type":"application/x-www-form-urlencoded"},body:o(t)};return await this.post(e,r)}async refreshToken(e){let t=`${this.BANDCAMP_BASE_URL}/oauth_token`,r={grant_type:"client_credentials",client_id:this.CLIENT_ID,client_secret:this.CLIENT_SECRET,refresh_token:e},s={headers:{"Content-Type":"application/x-www-form-urlencoded"},body:o(r)};return await this.post(t,s)}async getMyBands(e,t=1){let r=`${this.BANDCAMP_BASE_URL}/api/account/${t}/my_bands`,s={headers:{Authorization:`Bearer ${e}`}};return await this.post(r,s)}async getSalesReport(e,t,r=2){let s=`${this.BANDCAMP_BASE_URL}/api/sales/${r}/sales_report`,i={headers:{Authorization:`Bearer ${e}`},body:JSON.stringify(t)};return await this.post(s,i)}async getMerchDetails(e,t,r=1){let s=`${this.BANDCAMP_BASE_URL}/api/merchorders/${r}/get_merch_details`,i={headers:{Authorization:`Bearer ${e}`},body:JSON.stringify(a(t))};return await this.post(s,i)}async getShippingOriginDetails(e,t={},r=1){let s=`${this.BANDCAMP_BASE_URL}/api/merchorders/${r}/get_shipping_origin_details`,i={headers:{Authorization:`Bearer ${e}`},body:JSON.stringify(t)};return await this.post(s,i)}async getOrders(e,t,r=3){let s=`${this.BANDCAMP_BASE_URL}/api/merchorders/${r}/get_orders`,i={headers:{Authorization:`Bearer ${e}`},body:JSON.stringify(a(t))};return await this.post(s,i)}async updateShipped(e,t,r=2){let s=`${this.BANDCAMP_BASE_URL}/api/merchorders/${r}/update_shipped`,i={headers:{Authorization:`Bearer ${e}`},body:JSON.stringify({items:t})};return await this.post(s,i)}async markDateRangeAsShipped(e,t,r=1){let s=`${this.BANDCAMP_BASE_URL}/api/merchorders/${r}/mark_date_range_as_shipped`,i={headers:{Authorization:`Bearer ${e}`},body:JSON.stringify(a(t))};return await this.post(s,i)}async updateQuantities(e,t,r=1){let s=`${this.BANDCAMP_BASE_URL}/api/merchorders/${r}/update_quantities`,i={headers:{Authorization:`Bearer ${e}`},body:JSON.stringify({items:t})};return await this.post(s,i)}async updateSKU(e,t,r=1){let s=`${this.BANDCAMP_BASE_URL}/api/merchorders/${r}/update_sku`,i={headers:{Authorization:`Bearer ${e}`},body:JSON.stringify({items:t})};return await this.post(s,i)}};

module.exports = p;

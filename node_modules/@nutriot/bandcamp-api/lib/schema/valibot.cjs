'use strict';

var valibot = require('valibot');

var _=valibot.number([valibot.minValue(0)]),b=valibot.optional(valibot.picklist(["csv","json"])),d=valibot.tuple([valibot.date(),valibot.string()]),h=valibot.picklist(["o","p"]),s=valibot.tuple([valibot.null_(),valibot.string()]),g={grant_type:valibot.literal("client_credentials"),client_id:valibot.number([valibot.integer()]),client_secret:valibot.string()},f={band_id:valibot.number([valibot.integer()]),member_band_id:valibot.optional(valibot.number([valibot.integer()])),start_time:d,end_time:valibot.optional(d)},P={requestBody:valibot.object(g),response:void 0},v={requestBody:valibot.object({...g,refresh_token:valibot.string()}),response:void 0},L={requestBody:void 0,reponse:valibot.object({bands:valibot.array(valibot.object({subdomain:valibot.string(),band_id:valibot.number([valibot.integer()]),name:valibot.string(),member_bands:valibot.object({subdomain:valibot.string(),band_id:valibot.number([valibot.integer()]),name:valibot.string()})}))})},M={requestBody:valibot.object({...f,format:b}),response:valibot.tuple([valibot.record(valibot.string([valibot.minLength(1)]),valibot.object({date:valibot.string([valibot.isoDate()]),paid_to:valibot.tuple([valibot.string(),valibot.string([valibot.email()])]),item_type:valibot.tuple([valibot.literal("album"),valibot.literal("package"),valibot.literal("track")]),item_name:valibot.string(),artist:valibot.string(),currency:valibot.union([valibot.literal("AUD"),valibot.literal("CAD"),valibot.literal("CHF"),valibot.literal("CZK"),valibot.literal("DKK"),valibot.literal("EUR"),valibot.literal("GBP"),valibot.literal("HKD"),valibot.literal("HUF"),valibot.literal("ILS"),valibot.literal("JPY"),valibot.literal("MXN"),valibot.literal("NOK"),valibot.literal("NZD"),valibot.literal("PLN"),valibot.literal("SEK"),valibot.literal("SGD"),valibot.literal("USD")]),item_price:_,quantity:valibot.number([valibot.integer(),valibot.minValue(0)]),discount_code:s,sub_total:_,seller_tax:valibot.number(),marketplace_tax:valibot.number(),shipping:valibot.tuple([valibot.null_(),valibot.number()]),ship_from_country_name:valibot.string(),transaction_fee:_,fee_type:valibot.tuple([valibot.null_(),valibot.literal("creditcard"),valibot.literal("paypal")]),item_total:_,amount_you_received:_,bandcamp_transaction_id:valibot.number([valibot.integer()]),paypal_transaction_id:s,net_amount:_,package:valibot.string(),option:valibot.null_(),item_url:valibot.string([valibot.url()]),catalog_number:s,upc:valibot.string(),isrc:valibot.string(),buyer_name:valibot.string(),buyer_email:valibot.string([valibot.email()]),buyer_phone:s,buyer_note:s,ship_to_name:s,ship_to_street:valibot.string(),ship_to_street_2:valibot.string(),ship_to_city:s,ship_to_state:s,ship_to_zip:s,ship_to_country:s,ship_to_country_code:s,ship_date:d,ship_notes:s,country:valibot.string(),country_code:valibot.string([valibot.maxLength(2)]),region_or_state:valibot.string(),city:s,referer:valibot.string(),referer_url:valibot.string(),sku:s})),valibot.object({csv:valibot.string()})])},N={requestBody:valibot.object({...f,package_ids:valibot.array(valibot.number([valibot.integer()]))}),response:void 0},O={requestBody:valibot.object({band_id:valibot.optional(valibot.number([valibot.integer()])),origin_id:valibot.optional(valibot.number([valibot.integer()]))}),response:void 0},U={requestBody:valibot.object({band_id:valibot.number([valibot.integer()]),member_band_id:valibot.optional(valibot.number([valibot.integer()])),start_time:valibot.optional(d),end_time:valibot.optional(d),unshipped_only:valibot.optional(valibot.boolean()),name:valibot.optional(valibot.string()),origin_id:valibot.optional(valibot.number([valibot.integer()])),format:b}),response:void 0},A={requestBody:valibot.array(valibot.object({id:valibot.number([valibot.integer()]),id_type:valibot.picklist(["p","s"]),shipped:valibot.optional(valibot.boolean()),notification:valibot.optional(valibot.boolean()),notification_message:valibot.optional(valibot.string()),ship_date:valibot.optional(d),carrier:valibot.optional(valibot.string()),tracking_code:valibot.optional(valibot.tuple([valibot.number([valibot.integer()]),valibot.string()]))})),response:void 0},H={requestBody:valibot.object({band_id:valibot.number([valibot.integer()]),member_band_id:valibot.optional(valibot.number([valibot.integer()])),start_time:valibot.optional(d),end_time:d,origin_id:valibot.optional(valibot.number([valibot.integer()])),email_notifications:valibot.optional(valibot.boolean())}),response:void 0},R={requestBody:valibot.array(valibot.object({id:valibot.number([valibot.integer()]),id_type:h,quantity_sold:valibot.number([valibot.integer()]),quantity_available:valibot.number([valibot.integer()]),origin_id:valibot.optional(valibot.number([valibot.integer()]))})),response:void 0},j={requestBody:valibot.array(valibot.object({id:valibot.number([valibot.integer()]),id_type:h,sku:valibot.string()})),response:void 0};

exports.clientCredentials = P;
exports.getMerchDetails = N;
exports.getMyBands = L;
exports.getOrders = U;
exports.getShippingOrigin = O;
exports.markDateRangeAsShipped = H;
exports.refreshToken = v;
exports.salesReport = M;
exports.updateQuantities = R;
exports.updateShippedItems = A;
exports.updateSku = j;

import { number, minValue, optional, picklist, tuple, date, string, null_, literal, integer, object, array, record, minLength, isoDate, email, union, url, maxLength, boolean } from 'valibot';

var _=number([minValue(0)]),b=optional(picklist(["csv","json"])),d=tuple([date(),string()]),h=picklist(["o","p"]),s=tuple([null_(),string()]),g={grant_type:literal("client_credentials"),client_id:number([integer()]),client_secret:string()},f={band_id:number([integer()]),member_band_id:optional(number([integer()])),start_time:d,end_time:optional(d)},P={requestBody:object(g),response:void 0},v={requestBody:object({...g,refresh_token:string()}),response:void 0},L={requestBody:void 0,reponse:object({bands:array(object({subdomain:string(),band_id:number([integer()]),name:string(),member_bands:object({subdomain:string(),band_id:number([integer()]),name:string()})}))})},M={requestBody:object({...f,format:b}),response:tuple([record(string([minLength(1)]),object({date:string([isoDate()]),paid_to:tuple([string(),string([email()])]),item_type:tuple([literal("album"),literal("package"),literal("track")]),item_name:string(),artist:string(),currency:union([literal("AUD"),literal("CAD"),literal("CHF"),literal("CZK"),literal("DKK"),literal("EUR"),literal("GBP"),literal("HKD"),literal("HUF"),literal("ILS"),literal("JPY"),literal("MXN"),literal("NOK"),literal("NZD"),literal("PLN"),literal("SEK"),literal("SGD"),literal("USD")]),item_price:_,quantity:number([integer(),minValue(0)]),discount_code:s,sub_total:_,seller_tax:number(),marketplace_tax:number(),shipping:tuple([null_(),number()]),ship_from_country_name:string(),transaction_fee:_,fee_type:tuple([null_(),literal("creditcard"),literal("paypal")]),item_total:_,amount_you_received:_,bandcamp_transaction_id:number([integer()]),paypal_transaction_id:s,net_amount:_,package:string(),option:null_(),item_url:string([url()]),catalog_number:s,upc:string(),isrc:string(),buyer_name:string(),buyer_email:string([email()]),buyer_phone:s,buyer_note:s,ship_to_name:s,ship_to_street:string(),ship_to_street_2:string(),ship_to_city:s,ship_to_state:s,ship_to_zip:s,ship_to_country:s,ship_to_country_code:s,ship_date:d,ship_notes:s,country:string(),country_code:string([maxLength(2)]),region_or_state:string(),city:s,referer:string(),referer_url:string(),sku:s})),object({csv:string()})])},N={requestBody:object({...f,package_ids:array(number([integer()]))}),response:void 0},O={requestBody:object({band_id:optional(number([integer()])),origin_id:optional(number([integer()]))}),response:void 0},U={requestBody:object({band_id:number([integer()]),member_band_id:optional(number([integer()])),start_time:optional(d),end_time:optional(d),unshipped_only:optional(boolean()),name:optional(string()),origin_id:optional(number([integer()])),format:b}),response:void 0},A={requestBody:array(object({id:number([integer()]),id_type:picklist(["p","s"]),shipped:optional(boolean()),notification:optional(boolean()),notification_message:optional(string()),ship_date:optional(d),carrier:optional(string()),tracking_code:optional(tuple([number([integer()]),string()]))})),response:void 0},H={requestBody:object({band_id:number([integer()]),member_band_id:optional(number([integer()])),start_time:optional(d),end_time:d,origin_id:optional(number([integer()])),email_notifications:optional(boolean())}),response:void 0},R={requestBody:array(object({id:number([integer()]),id_type:h,quantity_sold:number([integer()]),quantity_available:number([integer()]),origin_id:optional(number([integer()]))})),response:void 0},j={requestBody:array(object({id:number([integer()]),id_type:h,sku:string()})),response:void 0};

export { P as clientCredentials, N as getMerchDetails, L as getMyBands, U as getOrders, O as getShippingOrigin, H as markDateRangeAsShipped, v as refreshToken, M as salesReport, R as updateQuantities, A as updateShippedItems, j as updateSku };
